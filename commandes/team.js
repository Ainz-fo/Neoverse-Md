const { zokou } = require("../framework/zokou");
const { saveUser, deleteUser, updateUser, getUserData } = require("../bdd/team");

zokou(
  {
    nomCom: "team‚öΩ",
    categorie: "Other",
  },
  async (dest, zk, commandeOptions) => {
    const { repondre, arg, auteurMessage, superUser } = commandeOptions;

    let userId = auteurMessage;
    if (arg.length >= 1) {
      userId = (arg[0]?.includes("@") && `${arg[0].replace("@", "")}@s.whatsapp.net`);
      if (!userId) return repondre("‚ö†Ô∏è Mentionne un utilisateur.");
    }

    try {
      let data = await getUserData(userId);
      if (!data) return repondre("‚ö†Ô∏è Aucune donn√©e trouv√©e pour cet utilisateur.");

      if (arg.length <= 1) {
        const fiche = `‚ñë‚ñë *üë§PLAYERü•Ö‚öΩ*: ${data.users}
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
*üõ°Ô∏èTeam:* ${data.team}
*‚¨ÜÔ∏èPoints de jeu:* ${data.points_jeu} XP
*üéñÔ∏èRang:* ${data.rank}
*üí∞Argent:* ${data.argent} üí∂
*üèÜPuissance d'√©quipe:* ${data.puissance}‚è´
*üéñÔ∏èClassement d'√©quipe:* ${data.classement}

‚ñë‚ñë *üìäRECORDS‚öΩü•Ö*
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
‚öΩWins: ${data.wins}   ‚ùåLoss: ${data.loss}   ü´±üèº‚Äçü´≤üèΩDraws: ${data.draws}
üèÜChampionnats: ${data.championnats}    üèÜNEL: ${data.nel}

ü•Ö +Lineup‚öΩ: ‚ö†Ô∏èpour voir la formation
üåç+player‚öΩ: ‚ö†Ô∏èpour voir son Hero
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî 
         ‚öΩüî∑ *BLUE LOCK NEOü•Ö*‚ñ±‚ñ±‚ñ±`;

        return await zk.sendMessage(dest, {
          image: { url: "https://files.catbox.moe/2patx3.jpg" },
          caption: fiche,
        });
      }

      if (!superUser) return repondre("‚ö†Ô∏è Seuls les membres de la NS peuvent actualiser une team.");

      const modifiables = [
        "users", "team", "points_jeu", "rank",
        "argent", "puissance", "classement", "wins", "loss", "draws", "championnats", "nel"
      ];

      let updates = {};

      for (let i = 1; i < arg.length;) {
        const field = arg[i]?.toLowerCase();
        const op = arg[i + 1];

        if (!modifiables.includes(field) || !["=", "+", "-"].includes(op)) {
          i++;
          continue;
        }

        const isNumeric = [
          "points_jeu", "argent", "puissance",
          "wins", "loss", "draws", "championnats", "nel"
        ].includes(field);

        let value;

        if (op === "=" && !isNumeric) {
          let valParts = [];
          let j = i + 2;
          while (j < arg.length && !modifiables.includes(arg[j].toLowerCase())) {
            valParts.push(arg[j]);
            j++;
          }
          value = valParts.join(" ");
          i = j;
        } else {
          value = arg[i + 2];
          i += 3;
        }

        if (value !== undefined) {
          if (isNumeric) {
            const val = parseInt(value);
            if (!isNaN(val)) {
              if (op === "=") updates[field] = val;
              else if (op === "+") updates[field] = data[field] + val;
              else if (op === "-") updates[field] = data[field] - val;
            }
          } else {
            if (op === "=") updates[field] = value;
          }
        }
      }

      if (Object.keys(updates).length > 0) {
        const message = await updateUser(userId, updates);
        return repondre(message);
      } else {
        return repondre("‚ö†Ô∏è Format incorrect ou champ non valide. Exemple : +team @user wins + 2 team = BlueLock Elite");
      }

    } catch (err) {
      console.error("‚ùå Erreur ligne team:", err);
      return repondre("‚ùå Une erreur est survenue.");
    }
  }
);

zokou(
  {
    nomCom: "team_s",
    categorie: "Other",
  },
  async (dest, zk, commandeOptions) => {
    const { repondre, arg, superUser } = commandeOptions;
    if (!superUser) return repondre("‚ö†Ô∏è Seuls les membres de la NS peuvent enregistrer un joueur.");

    const mention = (arg[0]?.includes("@") && `${arg[0].replace("@", "")}@s.whatsapp.net`);
    if (!mention) return repondre("‚ö†Ô∏è Mentionne un utilisateur.");

    const base = {
      users: "aucun",
      team: "aucun",
      points_jeu: 0,
      rank: "aucun",
      argent: 0,
      puissance: 0,
      classement: "aucun",
      wins: 0,
      loss: 0,
      draws: 0,
      championnats: 0,
      nel: 0,
    };

    for (let i = 1; i < arg.length; i += 2) {
      const key = arg[i]?.toLowerCase();
      const val = arg[i + 1];
      if (key in base) {
        base[key] = isNaN(val) ? val : parseInt(val);
      }
    }

    const message = await saveUser(mention, base);
    repondre(message);
  }
);

zokou(
  {
    nomCom: "team_d",
    categorie: "Other",
  },
  async (dest, zk, commandeOptions) => {
    const { repondre, arg, superUser } = commandeOptions;
    if (!superUser) return repondre("‚ö†Ô∏è Seuls les membres de la NS peuvent supprimer un joueur.");

    const mention = (arg[0]?.includes("@") && `${arg[0].replace("@", "")}@s.whatsapp.net`);
    if (!mention) return repondre("‚ö†Ô∏è Mentionne un utilisateur √† supprimer.");

    const message = await deleteUser(mention);
    repondre(message);
  }
);
