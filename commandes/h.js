const duels = new Map();  // Stocke les duels en cours

zokou(
    {
        nomCom: 'dul',
        categorie: 'Other'
    },
    async (dest, zk, commandeOptions) => {
        const { repondre, arg, ms } = commandeOptions;

        const afficherStats = (idDuel) => {
            const duel = duels.get(idDuel);
            return `*üÜöùó©ùóòùó•ùó¶ùó®ùó¶ ùóîùó•ùóòùó°ùóî ùóïùóîùóßùóßùóüùóòüèÜüéÆ*       
‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
üî∑   *${duel.joueur1}*: ü´Ä:${duel.stats.joueur1.stamina}%  üåÄ:${duel.stats.joueur1.energie}% ‚ù§Ô∏è:${duel.stats.joueur1.vie}%            
                                   ~  *üÜö*  ~
üî∑  *${duel.joueur2}*: ü´Ä:${duel.stats.joueur2.stamina}%  üåÄ:${duel.stats.joueur2.energie}% ‚ù§Ô∏è:${duel.stats.joueur2.vie}%.                            
 ‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
  *üåçùêÄùê´ùêûÃÄùêßùêû*: 
 *üö´ùêáùêöùêßùêùùê¢ùêúùêöùê©ùêû*: Boost 1 fois chaques 2 tours! 
 *‚öñÔ∏èùêíùê≠ùêöùê≠ùê¨*: 
 *üèûÔ∏è ùêÄùê¢ùê´ ùêùùêû ùêúùê®ùê¶ùêõùêöùê≠*: 50m max
 *ü¶∂üèºùêÉùê¢ùê¨ùê≠ùêöùêßùêúùêû ùê¢ùêßùê¢ùê≠ùê¢ùêöùê•ùêû*üìå: 5m
 *‚åöùêãùêöùê≠ùêûùêßùêúùêû*: 6mins+ 1‚ö†Ô∏è
 *‚≠ïùêèùê®ùê´ùê≠ùêûÃÅùêû*:  10m
 *üåçùêÑùêßùêØùê¢ùê´ùê®ùêßùêßùêûùê¶ùêûùêßùê≠*: 
 
‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî‚ñî
  *‚ö†Ô∏èVous avez üîü tours max pour finir votre Adversaire! Sinon la victoire sera donn√©e par d√©cision selon celui qui a dominer le combat o√π qui a √©t√© le plus √† l'offensive !*`;
        };

        // G√©rer l'initialisation d'un nouveau duel
        if (arg && arg.length > 0) {
            const args = arg.split(" ");
            
            // V√©rifier si c'est une commande pour arr√™ter le combat
            if (args[0] === 'combat') {
                const idDuel = args[2];
                if (duels.has(idDuel)) {
                    duels.delete(idDuel);  // Arr√™ter le combat
                    repondre(`Le combat ${idDuel} est termin√©.`);
                } else {
                    repondre(`Aucun combat trouv√© avec l'identifiant ${idDuel}.`);
                }
                return;
            }

            // Commencer un nouveau duel avec deux noms de joueurs
            if (args.length === 2) {
                const [joueur1, joueur2] = args;
                const idDuel = `${joueur1}-${joueur2}`;
                
                // Cr√©er un nouveau duel
                duels.set(idDuel, {
                    joueur1: joueur1,
                    joueur2: joueur2,
                    stats: {
                        joueur1: { stamina: 100, energie: 100, vie: 100 },
                        joueur2: { stamina: 100, energie: 100, vie: 100 }
                    }
                });
                
                repondre(`Le combat entre ${joueur1} et ${joueur2} commence !\n\n` + afficherStats(idDuel));
                return;
            }

            // Mise √† jour des statistiques pendant le duel (ex: "stamina - 50 joueur1-joueur2")
            if (args.length === 4) {
                const [stat, operation, valeur, idDuel] = args;

                if (duels.has(idDuel)) {
                    const duel = duels.get(idDuel);

                    const joueur = operation.includes("joueur1") ? 'joueur1' : 'joueur2';
                    const statName = stat.toLowerCase();

                    if (['stamina', 'energie', 'vie'].includes(statName)) {
                        if (operation.includes("-")) {
                            duel.stats[joueur][statName] -= parseInt(valeur);
                        } else if (operation.includes("+")) {
                            duel.stats[joueur][statName] += parseInt(valeur);
                        }

                        // Mettre √† jour le duel dans la map
                        duels.set(idDuel, duel);

                        // Envoyer la mise √† jour des stats
                        repondre(afficherStats(idDuel));
                    } else {
                        repondre("Statistique invalide. Utilisez 'stamina', 'energie' ou 'vie'.");
                    }
                } else {
                    repondre(`Aucun combat trouv√© avec l'identifiant ${idDuel}.`);
                }
                return;
            }
        } else {
            repondre("Commande invalide. Utilisez 'duel joueur1 joueur2' pour commencer un duel ou 'duel combat termin√© idDuel' pour terminer un duel.");
        }
    }
);
